[
  {
    "operation": "shift",
    "spec": {
      "data": {
        "attributes": {
          // simple match.  Put the value '4' in the output under the "Rating" field
          "name": "data.name",
          "account-type": "data.account_type",
          "account-id": "data.account_id",
          "lifecycle-status": "data.lifecycle_status",
          "billing-permissions": "data.billing_permissions",
          "debt-collection-permissions": "data.debt_collection_permissions",
          "debt-collection-profile": "data.debt_collection_profile",
          "characteristics": "data.characteristics",
          "valid-for": {
            "end-datetime": "data.valid_for.end_datetime",
            "start-datetime": "data.valid_for.start_datetime",
            "meta": {
              "type": "data.valid_for.meta.type"
            }
          }
        },
        "relationships": {
          "related-parties": {
            "data": {
              "0": {
                "id": "data.individuals2.given_name"
              }
            }
          }
        },
        // match any children of "rating"
        // Shiftr has a precendence order when matching, so the "*" will match "last".
        // In this case anything that isn't "primary".
        "*": {
          // &1 means, go up one level and grab that value and substitute it in
          //  in this example &1 = "quality"
          "max": "data.SecondaryRatings.&1.Range",
          "value": "data.SecondaryRatings.&1.Value",
          //
          // We want "quality" to be a value field in the output under
          //  "SecondaryRatings.quality.Id", but "quality" is an input key not an input value.
          // The "$" operator means use the input key, instead of the input value as ouput
          "$": "data.SecondaryRatings.&1.Id"
        }
      },
      "included2": {
        "*": {
          "attributes": "mi_attributes"
        }
      },
      "included": {
        "*": {
          "type": {
            "individuals": {
              "@3": "data.relationships.companies"
            },
            // all other values of "type", just pass the "data" blob thru
            //  at the same path in the output.
            "*": {
              "@3": "data.relationships.&4"
            }
          }
        }
      }
    }
  },
  {
    "operation": "default",
    "spec": {
      "data": {
        "Range": 5,
        "SecondaryRatings": {
          "*": {
            // Defaut all "SecondaryRatings" to have a Range of 5
            "Range": 5
          }
        }
      }
    }
  }
]
